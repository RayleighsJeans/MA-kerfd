######################################
## print input parameters of desire here
# nocalc = 0;
if (nocalc != 1) {

	#system "echo L_db02d=0.023469 >> GnuVars.tmp"	
	#system "echo lines=60 >> GnuVars.tmp"	
	#system "echo collfac2d=194020228.02 >> GnuVars.tmp"	

	print "## NO INPUT FILE - READ CALC.GPLT FOR INFO"
	## 2D
	Te02d= 5.0;
	voltage2d= 400.0;
	ne02d= 5.0e9;
	sizez2d= 300;
	pressure= 10.0;
	fac1d2d=1.0;
	dt_ntrl= 30;
	dt_ion= 10;
	Ti_over_Te2d= 0.008;
	nn_pc= 300.0;
	Ncell1= 6.0;
	navdt= 100;
	nr= 400;
	## 1D
  Ti_over_Te1d= 0.008;
	collfac1d= 6e4;
	ne01d= 5.e9;
	Te01d = 5.0;
	nz1d= 300;
	voltage1d= 400;

	## PARTICLE NORM AND COLLFAC
	particle_i = Ncell1/2;
	particle_a = particle_i;
	do for [i=1:nr] {
		particle_io = particle_i;
		particle_i = particle_io + Ncell1/2;
		particle_ao = particle_a;
		particle_a = particle_ao + particle_i;
	}
	particlenorm = particle_a/nr; 

	## CALCULATIONS
	Omega_pe02d = 5.64e4 * sqrt(ne02d);
	Omega_pe01d = 5.64e4 * sqrt(ne01d);
	L_db02d = 7.43e2 * sqrt(Te02d / ne02d);
	L_db01d = 7.43e2 * sqrt(Te01d / ne01d);
	collfac2d = pressure / (1.38e-23 * 300 * ne02d * 1e6) * (particlenorm / nn_pc);

} else {

	## CALCULATIONS
	Omega_pe02d = 5.64e4 * sqrt(ne02d);
	Omega_pe01d = 5.64e4 * sqrt(ne01d);
	L_db02d = 7.43e2 * sqrt(Te02d / ne02d);
	L_db01d = 7.43e2 * sqrt(Te01d / ne01d);
	collfac2d = pressure / (1.38e-23 * 300 * ne02d * 1e6) * (particlenorm / nn_pc);

}
	
## MISC
dr = 0.5; # constant
dt = 0.2; # --"--

######################################
elementary_chrg = 1.60219e-19;
# in Coulomb
atom_mass = 32.0;
# atom mass in au
mn_over_me = 1836.0 * atom_mass; 
# neutral mass over electron mass
mi_over_me = 1836.0 * atom_mass - 1.0;
# ion mass over electron mass
me_over_mi = 1.0 / mi_over_me;
# electron mass of ion mass
vac_permit = 8.854e-12;
# in A^2*s^4/kg*m^3, equals F/m
boltzman = 1.3806e-23;
# in J/K
v_te = dt / dr;
# L_db0 = debye2D;
# in cm
print ">> L_db0 2D [cm] = "; print L_db02d;
# in cm
print ">> L_db0 1D [cm] = "; print L_db01d;
dr_0 = L_db02d*dr;
dt_0 = dt/Omega_pe02d;
dr1d_0 = L_db01d*dr;
expdiameter = nr*dr_0;
# experiment diameter in cm
print ">> R [cm] = "; print expdiameter;
explength = sizez2d*dr_0;
# experiment length in cm
print ">> Z [cm] = "; print explength;
explength1d = nz1d*dr1d_0;
# experiment length1d in cm
print ">> Z_1D [cm] = "; print explength1d;
# supposed particle number instead nn_pc
print ">> p_norm 2D = "; print particlenorm;
# collfac for neutral dynamics
print ">> collfac 2D = "; print collfac2d;
# collfac 1D
print ">> collfac 1D = "; print collfac1d;

## AXIAL PROFILE APPROX ##############################
print ""
print "## AXIAL PROFILE APPROX (for n_e0~5e9) ####";
ndens1d = 1.25*collfac1d*ne01d;
print ">> n_n 1D = "; print ndens1d;
ndens2d = 1.25*collfac2d*ne02d*fac1d2d;
print ">> n_n 2D = "; print ndens2d;
suggestedfac = ndens1d/ndens2d;
print ">> ~ fac1d2d = "; print suggestedfac;

## REST ##############################################
print "";
print "## REST #####################################";
# electron velocity in dimensionless units
print ">> v_te (diml.)= "; print v_te;
v_ti = v_te * sqrt(Ti_over_Te2d * me_over_mi) * dt_ion;
# ion velocity (thermal) dimensionless
print ">> v_ti (diml.)= "; print v_ti
v_tn = v_te * sqrt(Ti_over_Te2d * me_over_mi) * dt_ntrl;
# neutral thermal velocity dimensionless
print ">> v_tn (diml.)= "; print v_tn;
# plasma frequency in Hz
print ">> w_pe0 [Hz] 2D = "; print Omega_pe02d;
# plasma frequency in Hz
print ">> w_pe0 [Hz] 1D = "; print Omega_pe01d;
f_RF = 13.65e6;
# experiment frequency
n_RF2d = 1 / (f_RF * 0.2 / (Omega_pe02d));
n_RF1d = 1 / (f_RF * 0.2 / (Omega_pe01d));
# number of cycles for RF period 2D
print ">> n_RF 2D = "; print n_RF2d;
# number of cycles for RF period 1D
print ">> n_RF 1D = "; print n_RF1d;
Te02d_K = Te02d*elementary_chrg/boltzman;
# in K
print ">> Te02d [K] = "; print Te02d_K;
T_i0 = Ti_over_Te2d*Te02d_K;
# ion temperature in K
print ">> T_i0 [K] = "; print T_i0;
# neutral/ion flight width
ntr_fly = sqrt(3*boltzman*T_i0/(1.66e-27*32))*(0.2/Omega_pe02d)*(1/(0.5*L_db02d*1e-2))*dt_ion;
print ">> n_mfp (diml.)= "; print ntr_fly;
debye_L1 = 1e2/sqrt((elementary_chrg*elementary_chrg)/(vac_permit*boltzman)*(ne02d*1e6)/(T_i0)*(1+Ti_over_Te2d));
# debye length test in cm
print ">> L_db0 T1 [cm] = "; print debye_L1;
dr_0test1 = dr*debye_L1;
# cell width test in cm
print ">> dr_0 T1 [cm] = "; print dr_0test1;
debye_L2 = 1e2*sqrt(vac_permit*boltzman*Te02d_K/(ne02d*1e6*elementary_chrg*elementary_chrg));
# in cm
print ">> L_db0 T2 [cm] = "; print debye_L2;
dr_0test2 = dr*debye_L2;
# cell width test in cm
print ">> dr_0 T2 [cm] = "; print dr_0test2;
Ndb = ne02d * 4/3*pi*L_db02d*L_db02d*L_db02d;
# number of particles in debye sphere
print "N_db 2D = "; print Ndb;
Ndb2 = ne02d * L_db01d;
# false number of particles in debye cell
print ">> N_db 1D = "; print Ndb2;

print "## DONE #####################################";
